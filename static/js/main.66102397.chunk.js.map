{"version":3,"sources":["Containers/Todo/TodoComponent.js","Containers/BasicRedux/BasicReduxComponent.js","Containers/Blog/Blog.js","App.js","serviceWorker.js","index.js"],"names":["TaskModel","name","arguments","length","undefined","isDone","this","id","uniqid","defaultTask","TodoComponent","state","incomingTask","todoList","removeTodo","_this","setState","filter","todoItem","addItem","e","preventDefault","_this$state","concat","Object","toConsumableArray","onHandleChange","target","value","editTodo","editedTask","pop","defaultCopy","doneTodo","todo","_this2","react_default","a","createElement","onSubmit","placeholder","onChange","event","type","TodoComponent_TodoList","delete","edit","done","Component","TodoList","props","map","_ref","key","style","textDecoration","onClick","display","BasicReduxComponent","Blog","basePath","match","url","console","log","className","NavLink","to","exact","pathname","Route","path","render","component","withRouter","App","BrowserRouter","Containers_Blog_Blog","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.66102397.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport uniqid from 'uniqid';\n\nfunction TaskModel(name = '', isDone = false) {\n  this.name = name;\n  this.isDone = isDone;\n  this.id = uniqid();\n}\nconst defaultTask = new TaskModel();\n\nexport default class TodoComponent extends Component {\n  state = {\n    incomingTask: defaultTask,\n    todoList: [\n      new TaskModel('get bread'),\n      new TaskModel('study german'),\n      new TaskModel('code'),\n      new TaskModel('play'),\n    ],\n  }\n\n  removeTodo = (id) => {\n    // OPTION 1 \n    // const d = [...this.state.todoList];\n    // d.splice(index, 1);\n    // this.setState({\n    //   todoList: d,\n    // });\n    // OPTION 2 \n    this.setState({\n      todoList: this.state.todoList.filter((todoItem) => todoItem.id !== id),\n    })\n  }\n\n  addItem = (e) => {\n    e.preventDefault();\n    const { todoList, incomingTask } = this.state;\n    this.setState({\n      todoList: [incomingTask, ...todoList],\n      incomingTask: defaultTask\n    })\n  }\n\n  onHandleChange = (e) => {\n    this.setState({\n      incomingTask: new TaskModel(e.target.value),\n    })\n  }\n\n  editTodo = (id) => {\n    const { todoList } = this.state;\n\n    const editedTask = todoList.filter(\n      (todoItem) => todoItem.id === id).pop();\n\n    const defaultCopy = todoList.filter(\n      (todoItem) => todoItem.id !== id);\n\n    this.setState({\n      incomingTask: editedTask,\n      todoList: defaultCopy,\n    });\n  }\n\n  doneTodo = (id) => {\n    const { todoList } = this.state;\n\n    const todo = todoList.filter(\n      (todoItem) => todoItem.id === id).pop();\n    todo.isDone = true;\n    \n    const defaultCopy = todoList.filter(\n      (todoItem) => todoItem.id !== id);\n\n    this.setState({\n      todoList: [...defaultCopy, todo],\n    });\n  }\n\n  render() {\n    const { todoList } = this.state;\n    return (\n      <div>\n        <form onSubmit={(e) => this.addItem(e)}>\n          <input\n            placeholder=\"Task\"\n            onChange={(event) => this.onHandleChange(event)}\n            value={this.state.incomingTask.name}\n          />\n          <button type=\"submit\"> Add Task </button>\n        </form>\n        <TodoList\n          todoList={todoList}\n          delete={(id) => this.removeTodo(id)}\n          edit={(id) => this.editTodo(id)}\n          done={(id) => this.doneTodo(id)}\n        />\n      </div>\n    );\n  }\n}\n\nconst TodoList = (props) => {\n  return (\n    <div>\n      {props.todoList\n        .map(({ id, name, isDone }) => (\n          <div key={id}>\n            <span style={isDone ? { textDecoration: 'line-through' } : {}}>{name}</span>\n            <button onClick={() => props.edit(id)}>Edit</button>\n            <button onClick={() => props.delete(id)}>Delete</button>\n            <button \n            onClick={() => props.done(id)}\n            style={isDone ? { display: 'none' } : {}}\n            >Mark Done</button>\n          </div>\n        ))\n      }\n    </div>\n  )\n}","import React, { Component } from 'react';\n\nexport default class BasicReduxComponent extends Component {\n  render() {\n    return (\n        <div>\n          <h1>I am BasicReduxComponent</h1>\n        </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\n// STEP: 2 #Router\nimport { Route, NavLink, withRouter } from 'react-router-dom';\n\nimport './Blog.css';\nimport TodoComponent from '../Todo/TodoComponent';\nimport BasicReduxComponent from '../BasicRedux/BasicReduxComponent';\n\nclass Blog extends Component {\n    render() {\n        const { url: basePath } = this.props.match;\n        console.log({basePath}, this.props.match);\n        return (\n            <div className=\"Blog\">\n                <header>\n                    <nav>\n                        <ul>\n                            <li><NavLink to=\"/\" exact>Home</NavLink></li>\n                            <li><NavLink to={{ pathname: `${basePath}/todo` }}>Todo</NavLink></li>\n                            <li><NavLink to={{ pathname: `${basePath}/basicRedux` }}>Basic Redux</NavLink></li>\n                            {/* <li><NavLink to={{\n                                pathname: '/new-post',\n                                hash: '#submit',\n                                search: '?quick-submit=true'\n                            }}>New Post</NavLink></li> */}\n                        </ul>\n                    </nav>\n                </header>\n                <Route path=\"/\" exact render={() => <h1>No body home</h1>} />\n                <Route path=\"/todo\" component={TodoComponent} />\n                <Route path=\"/basicRedux\" component={BasicReduxComponent} />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Blog);","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Blog from './Containers/Blog/Blog';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      // STEP: 1 #Router\n      <BrowserRouter>\n        <div className=\"App\">\n          <Blog />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}